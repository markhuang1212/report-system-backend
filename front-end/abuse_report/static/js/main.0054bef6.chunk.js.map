{"version":3,"sources":["i18n.ts","FeedbackHandler.ts","AppContent.tsx","AppHeader.tsx","AppMainPage.tsx","AppThanksPage.tsx","App.tsx","index.tsx"],"names":["i18n","use","initReactI18next","LanguageDetector","init","resources","LangJson","fallbackLng","keySeparator","interpolation","escapeValue","protocol","window","location","uri","hostname","port","includes","isDevEnv","path","FeedbackHandler","feedback_id","job_queue_length","this","getFeedbackId","then","id","fetch","fetch_id_response","json","fetch_id_data","data","file","console","log","method","headers","screenshot_name","name","body","feedback","JSON","stringify","shared","AppContent","useState","submitName","setSubmitName","submitPhone","setSubmitPhone","submitEmail","setSubmitEmail","submitCategory","setSubmitCategory","submitDescription","setSubmitDescription","hasChosenPhotos","setHasChosenPhotos","history","useHistory","uploadButtonRef","useRef","t","useTranslation","submitOnClick","e","a","preventDefault","uploadFeedback","feedback_email","feedback_name","feedback_description","feedback_phone","feedback_category","push","error","alert","resetHandler","className","style","display","type","accept","onChange","target","files","i","length","uploadFeedbackScreenshot","catch","multiple","ref","currentTarget","value","placeholder","onClick","current","click","color","fontWeight","AppHeader","AppMainPage","AppThanksPage","isUploading","setIsUploading","setInterval","marginTop","fontSize","App","basename","document","title","i18next","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0054bef6.chunk.js","sourcesContent":["import i18n from 'i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next } from 'react-i18next';\nimport LangJson from './lang.json'\n\ni18n.use(initReactI18next)\n    .use(LanguageDetector)\n    .init({\n        resources: LangJson.i18n,\n        fallbackLng: 'en',\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false\n        }\n    })\n\nexport default i18n","import 'whatwg-fetch'\nimport { FeedbackInformation } from \"./Feedback\"\n\nconst isDevEnv = () => {\n    const uri = window.location.hostname\n    return uri === 'localhost' || uri === '127.0.0.1' || uri.includes('192.168')\n}\n\nconst protocol = window.location.protocol\nconst uri = window.location.hostname\nconst port = isDevEnv() ? 3001 : window.location.port\n\nconst path = `${protocol}//${uri}:${port}/abuse_report`\n\nclass FeedbackHandler {\n\n    feedback_id!: string\n\n    job_queue_length = 0\n\n    static shared = new FeedbackHandler()\n\n    constructor() {\n        this.getFeedbackId().then(id => {\n            this.feedback_id = id\n        })\n        // this.status = 'idle'\n    }\n\n    async resetHandler() {\n        this.job_queue_length = 0\n        this.feedback_id = await this.getFeedbackId()\n    }\n\n    async getFeedbackId() {\n        const fetch_id_response = await window.fetch(`${path}/feedback_id`)\n        const fetch_id_data = await fetch_id_response.json()\n        return fetch_id_data.data.feedback_id\n    }\n\n    async uploadFeedbackScreenshot(file: File) {\n        this.job_queue_length++\n        console.log(`job queue length: ${this.job_queue_length}`)\n        await window.fetch(`${path}/screenshot`, {\n            method: 'POST',\n            headers: {\n                feedback_id: this.feedback_id,\n                screenshot_name: file.name\n            },\n            body: file\n        })\n        this.job_queue_length--\n        console.log(`job queue length: ${this.job_queue_length}`)\n    }\n\n    async uploadFeedback(feedback: FeedbackInformation) {\n        this.job_queue_length++\n        console.log(`job queue length: ${this.job_queue_length}`)\n        await window.fetch(`${path}/feedback`, {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                ...feedback,\n                feedback_id: this.feedback_id\n            } as FeedbackInformation)\n        })\n        this.job_queue_length--\n        console.log(`job queue length: ${this.job_queue_length}`)\n    }\n}\n\nexport default FeedbackHandler","import './AppContent.css'\nimport { useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport React from 'react'\n// import { FeedbackInformation } from './Feedback'\nimport FeedbackHandler from './FeedbackHandler'\nimport { useTranslation } from 'react-i18next'\n\nfunction AppContent() {\n    const [submitName, setSubmitName] = useState('')\n    const [submitPhone, setSubmitPhone] = useState('')\n    const [submitEmail, setSubmitEmail] = useState('')\n    const [submitCategory, setSubmitCategory] = useState('false information')\n    const [submitDescription, setSubmitDescription] = useState('')\n    const [hasChosenPhotos, setHasChosenPhotos] = useState(false)\n    const history = useHistory()\n    const uploadButtonRef = useRef(null)\n    const { t } = useTranslation()\n\n    const submitOnClick = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        try {\n            await FeedbackHandler.shared.uploadFeedback({\n                feedback_email: submitEmail,\n                feedback_name: submitName,\n                feedback_description: submitDescription,\n                feedback_phone: submitPhone,\n                feedback_category: submitCategory\n            })\n            history.push('/thanks')\n        } catch (e) {\n            console.error(`Error when submitting feedback`)\n            console.error(e)\n            window.alert(t('error'))\n            FeedbackHandler.shared.resetHandler()\n        }\n    }\n\n    const onNameChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSubmitName(e.target.value)\n    }\n\n    const onEmailChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSubmitEmail(e.target.value)\n    }\n\n    const onPhoneChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSubmitPhone(e.target.value)\n    }\n\n    const onDescriptionChanged = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setSubmitDescription(e.target.value)\n    }\n\n    const onSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files) {\n            setHasChosenPhotos(true)\n            for (let i = 0; i < e.target.files.length; i++) {\n                FeedbackHandler.shared.uploadFeedbackScreenshot(e.target.files[i]).catch(e => {\n                    console.error(`Error when uploading screenshot.`)\n                    console.error(e)\n                })\n            }\n        }\n    }\n\n    const onSelectCategory = (e: React.SyntheticEvent<HTMLSelectElement, Event>) => {\n        setSubmitCategory(e.currentTarget.value)\n    }\n\n    return (\n        <div className=\"AppContent\">\n            <input style={{ display: 'none' }} type=\"file\" accept=\"image/*\" onChange={onSelectFile} multiple ref={uploadButtonRef} />\n            <div className=\"AppContentFormContainer\">\n                <form className=\"AppContentForm\">\n                    <div className=\"AppContentFormTextField\">\n                        <label>{t('category')}</label>\n                        <select onChange={onSelectCategory} value={submitCategory}>\n                            <option value=\"false information\">{t('false information')}</option>\n                            <option value=\"pornographic\">{t('pornographic content')}</option>\n                            <option value=\"violence\">{t('promote violence')}</option>\n                            <option value=\"other\">{t('other content')}</option>\n                        </select>\n                    </div>\n                    <div className=\"AppContentFormBugDescriptionField\">\n                        <label>{t('abuse description')}</label>\n                        <textarea placeholder={t('abuse detail')} onChange={onDescriptionChanged} value={submitDescription} />\n                    </div>\n                    <div className=\"AppContentFormSelectFileField\">\n                        <label>{t('screenshots')}:</label>\n                        <span>{hasChosenPhotos ? t('selected') : ''}</span>\n                        <button onClick={e => {\n                            e.preventDefault();\n                            (uploadButtonRef as any).current.click()\n                        }}>\n                            {hasChosenPhotos ? t('reselect') : t('select photos')}\n                        </button>\n                    </div>\n                    <div style={{ color: 'gray', fontWeight: 500 }}>{t('contact info')}</div>\n                    <div className=\"AppContentFormTextField\">\n                        <label>{t('your name')}:</label>\n                        <input type=\"name\" onChange={onNameChanged} value={submitName} />\n                    </div>\n                    <div className=\"AppContentFormTextField\">\n                        <label>{t('email')}:</label>\n                        <input type=\"email\" onChange={onEmailChanged} value={submitEmail} />\n                    </div>\n                    <div className=\"AppContentFormTextField\">\n                        <label>{t('phone')}:</label>\n                        <input type=\"phone\" onChange={onPhoneChanged} value={submitPhone} />\n                    </div>\n                    <button className=\"AppContentFormSubmitButton\" onClick={submitOnClick}>{t('submit')}</button>\n                    <div className=\"AppContentBottomBarText\">\n                        {t('product name')}\n                    </div>\n                </form>\n            </div>\n        </div >\n    )\n}\n\nexport default AppContent","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport './AppHeader.css'\n\nfunction AppHeader() {\n    const { t } = useTranslation()\n    return (\n        <div className=\"AppHeader\">\n            {t('report abuse')}\n        </div>\n    )\n}\n\nexport default AppHeader","import React from \"react\"\nimport AppContent from \"./AppContent\"\nimport AppHeader from \"./AppHeader\"\n\nfunction AppMainPage() {\n    return (\n        <div>\n            <AppHeader></AppHeader>\n            <AppContent></AppContent>\n        </div>\n    )\n}\n\nexport default AppMainPage","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AppHeader from \"./AppHeader\";\nimport FeedbackHandler from \"./FeedbackHandler\";\n\nfunction AppThanksPage() {\n\n    const { t } = useTranslation()\n\n    const [isUploading, setIsUploading] = useState(FeedbackHandler.shared.job_queue_length === 0 ? false : true)\n    setInterval(() => {\n        if (FeedbackHandler.shared.job_queue_length === 0 && isUploading === true) {\n            setIsUploading(false)\n        }\n        if (FeedbackHandler.shared.job_queue_length >= 1 && isUploading === false) {\n            setIsUploading(true)\n        }\n    }, 200)\n\n    return (\n        <div>\n            <AppHeader></AppHeader>\n            <div style={{\n                marginTop: '240px',\n                fontSize: '28px'\n            }}>\n                {t('thank you')}<br />\n                <span style={{ fontSize: '16px', color: 'gray' }}>\n                    {isUploading ? t('submitting') : t('submitted')}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default AppThanksPage","// import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport AppMainPage from './AppMainPage';\nimport AppThanksPage from './AppThanksPage';\n\nfunction App() {\n    return (\n        <Router basename='/abuse_report'>\n            <div className=\"App\">\n                <Switch>\n                    <Route path=\"/thanks\">\n                        <AppThanksPage></AppThanksPage>\n                    </Route>\n                    <Route path=\"/\">\n                        <AppMainPage></AppMainPage>\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './App';\nimport i18next from 'i18next'\n\ndocument.title = i18next.t('report abuse')\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}